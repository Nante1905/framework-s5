[
  {
    "id": 1,
    "nom": "Java Flamework",
    "exception": "throws Exception",
    "syntax": {
      "namespace": "package",
      "namespaceStart": ";",
      "namespaceEnd": ""
    },
    "types": {
      "int": "Integer",
      "double": "Double",
      "string": "String",
      "date": "java.time.LocalDate",
      "timestamp": "java.time.LocalDateTime"
    },
    "typeParsers": {
      "Integer": "Integer.parseInt([value])",
      "Double": "Double.parseDouble([value])",
      "String": "[value]",
      "java.time.LocalDate": "java.time.LocalDate.parse([value])",
      "java.time.LocalDateTime": "java.time.LocalDateTime.parse([value])"
    },
    "skeleton": "flamework_skeleton",
    "projectNameTags": [
      "[projectNameMaj]/[projectApiName]/web/WEB-INF/web.xml",
      "[projectNameMaj]/[projectApiName]/execute.bat"
    ],
    "additionnalFiles": [],
    "model": {
      "modelImports": [
        "import veda.godao.annotations.Column;",
        "import veda.godao.annotations.Table;",
        "import veda.godao.annotations.PrimaryKey;"
      ],
      "modelExtends": "",
      "modelAnnotations": ["@Table(\"[tableName]\")"],
      "modelPrimaryFieldAnnotations": ["@PrimaryKey"],
      "modelForeignFieldAnnotations": [
        "@veda.godao.annotations.ForeignKey(recursive=true)"
      ],
      "modelFieldAnnotations": ["@Column(\"[columnName]\")"],
      "modelFieldCase": "Min",
      "modelFieldContent": "private [fieldType] [fieldName[modelFieldCase]];",
      "modelGetter": "public [fieldType] get[fieldNameMaj](){ return [fieldName[modelFieldCase]]; }",
      "modelSetter": "public void set[fieldNameMaj]([fieldType] o){ [fieldName[modelFieldCase]]=o; }",
      "modelConstructors": [
        "public [classNameMaj](){}",
        "public [classNameMaj]([primaryFieldType] o){ [primaryFieldName[modelFieldCase]]=o; }"
      ],
      "modelSavePath": "[projectNameMaj]/[projectApiName]/src/[projectNameMin]/entities",
      "modelAdditionnalFiles": [],
      "modelExtension": "java",
      "modelPackage": "[projectNameMin].entities",
      "modelTemplate": "ModelTemplate",
      "fkLabel": {
        "labelMethod": "return get[fieldNameMaj]();",
        "defaultLabelMethod": "throw new Exception(\"Unimplemented method getLabel\");"
      }
    },
    "controller": {
      "controllerImports": [
        "import eriq.flamework.annotations.Controller;",
        "import eriq.flamework.annotations.Singleton;",
        "import eriq.flamework.annotations.URLMapping;",
        "import eriq.flamework.model.ModelRest;",
        "import eriq.flamework.model.ModelView;",
        "import eriq.flamework.servlet.ServletEntity;",
        "import veda.godao.DAO;",
        "import veda.godao.utils.DAOConnexion;",
        "import java.sql.Connection;",
        "import [projectNameMin].entities.[classNameMaj];",
        "import jakarta.servlet.http.HttpServletResponse;",
        "import org.postgresql.util.PSQLException;",
        "import eriq.flamework.dao.DatabaseInfo;",
        "import constants.Constant;",
        "import veda.godao.utils.Paginated;",
        "import handyman.Utils;"
      ],
      "controllerAnnotations": ["@Controller", "@Singleton"],
      "controllerExtends": "",
      "controllerName": "[classNameMaj]Controller",
      "controllerFields": [
        {
          "controllerFieldAnnotations": [],
          "controllerFieldContent": "private DAO dao = new DAO();"
        }
      ],
      "controllerChangeInstanciation": {
        "template": "o.set[fieldNameMaj]([content]);",
        "value": "entity.getData().get(\"[fieldNameMin]\")"
      },
      "controllerWhereInstanciation": {
        "template": "where.set[primaryNameMaj]([content]);",
        "value": "entity.getData().get(\"[primaryNameMin]\")"
      },
      "controllerForeignInstanciation": {
        "template": "o.set[fieldNameMaj](new [projectNameMin].entities.[foreignType]([content]));",
        "value": "entity.getData().get(\"[fieldNameMin]\")"
      },
      "controllerForeignList": "[projectNameMin].entities.[foreignType][] [foreignNameMin]=dao.select(connex, [projectNameMin].entities.[foreignType].class);\nmodel.addItem(\"[foreignNameMin]s\", [foreignNameMin]);",
      "controllerForeignContextParam": "",
      "controllerForeignContextInstanciation": "",
      "controllerConstructors": [],
      "controllerForeignInclude": "",
      "controllerMethods": [
        {
          "controllerMethodAnnotations": [
            "@URLMapping(value=\"insert[classNameMin].do\", method=\"POST\")"
          ],
          "controllerMethodParameter": "",
          "controllerMethodContent": "flamework/controller/flameworkControllerInsert"
        },
        {
          "controllerMethodAnnotations": [
            "@URLMapping(value=\"[classNameMin].do\")"
          ],
          "controllerMethodParameter": "",
          "controllerMethodContent": "flamework/controller/flameworkControllerRead"
        },
        {
          "controllerMethodAnnotations": [
            "@URLMapping(value=\"update[classNameMin].do\", method=\"PUT\")"
          ],
          "controllerMethodParameter": "",
          "controllerMethodContent": "flamework/controller/flameworkControllerUpdate"
        },
        {
          "controllerMethodAnnotations": [
            "@URLMapping(value=\"delete[classNameMin].do\", method=\"DELETE\")"
          ],
          "controllerMethodParameter": "",
          "controllerMethodContent": "flamework/controller/flameworkControllerDelete"
        }
      ],
      "controllerSavepath": "[projectNameMaj]/[projectApiName]/src/[projectNameMin]/controllers",
      "controllerExtension": "java",
      "controllerPackage": "[projectNameMin].controllers",
      "controllerTemplate": "ControllerTemplate",
      "controllerNameSuffix": "Controller"
    },
    "view": {
      "viewForeignList": "[foreignType][] [foreignNameMin]=([foreignType][])request.getAttribute(\"[foreignNameMin]s\");",
      "viewTableHeader": "<th scope=\"col\">[fieldNameFormattedMaj]</th>",
      "foreignFieldGet": ".getLabel()",
      "viewTableLine": "<td><%= o.get[fieldNameMaj]()[foreignFieldGet] %></td>",
      "viewUpdateFormForeignField": "flamework/view/components/flameworkViewUpdateForeign",
      "viewUpdateFormField": {
        "Integer": "flamework/view/components/flameworkViewUpdateInt",
        "Double": "flamework/view/components/flameworkViewUpdateDouble",
        "String": "flamework/view/components/flameworkViewUpdateString",
        "java.time.LocalDate": "flamework/view/components/flameworkViewUpdateDate",
        "java.time.LocalDateTime": "flamework/view/components/flameworkViewUpdateTimestamp"
      },
      "viewInsertFormForeignField": "flamework/view/components/flameworkViewInsertForeign",
      "viewInsertFormField": {
        "Integer": "flamework/view/components/flameworkViewInsertInt",
        "Double": "flamework/view/components/flameworkViewInsertDouble",
        "String": "flamework/view/components/flameworkViewInsertString",
        "java.time.LocalDate": "flamework/view/components/flameworkViewInsertDate",
        "java.time.LocalDateTime": "flamework/view/components/flameworkViewInsertTimestamp"
      },
      "viewName": "[classNameMin]",
      "viewContent": "flamework/view/flameworkView",
      "viewSavePath": "[projectNameMaj]/[projectApiName]/web/pages",
      "viewExtension": "jsp"
    },
    "customChanges": [],
    "navbarLinks": {
      "path": "[projectNameMaj]/[projectApiName]/web/pages/layout/layout.jsp",
      "link": "<a href=\"/[projectNameMaj]/tocrud[classNameMin].do\" class=\"nav-item nav-link\"><i class=\"fa fa-tachometer-alt me-2\"></i>[classNameformattedMaj]</a>"
    }
  }
]
